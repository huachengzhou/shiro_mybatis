<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mybatis.mapper.OrdersMapperCustom">
    
    <resultMap type="orders" id="OrdersUserResultMap">
        <!-- 配置映射的订单信息 :column数据库唯一标识名   property JavaBean POJO中的属性名 ;id：指定查询列中的唯 一标识-->
		<!-- id：指定查询列中的唯 一标识，订单信息的中的唯 一标识，如果有多个列组成唯一标识，配置多个id column-->
		<id column="id" property="id" />
		<result column="number" property="number"  />
		<result column="createtime" property="createtime"  />
		<result column="note" property="note"  />
		<result column="user_id" property="userId"  />
		<!-- 配置用户信息 user  association：用于映射关联查询单个对象的信息   property：要将关联查询的用户信息映射到Orders中哪个属性-->
		<association property="user" javaType="cn.mybatis.po.User">
		    <id column="user_id" property="id" />
		    <result column="username" property="username"/>
		    <result column="sex" property="sex"/>
		    <result column="birthday" property="birthday"/>
		    <result column="address" property="address"/>
		</association>
    </resultMap>
    
    <resultMap type="orders" id="OrdersAndOrderDetailResultMap" extends="OrdersUserResultMap">
		<!-- 映射集合属性 -->
		<!-- 订单明细信息
		一个订单关联查询出了多条明细，要使用collection进行映射
		collection：对关联查询到多条记录映射到集合对象中
		property：将关联查询到多条记录映射到cn.itcast.mybatis.po.Orders哪个属性
		ofType：指定映射到list集合属性中pojo的类型 -->
		<collection property="orderdetails" ofType="cn.mybatis.po.Orderdetail">
		    <id column="orderdetail_id" property="id" />
		    <result column="orders_id" property="ordersId" />
		    <result column="items_id" property="itemsId" />
		    <result column="items_num" property="itemsNum" />
		</collection>
    </resultMap>
    
    <!-- 查询用户及购买的商品 -->
    <resultMap type="user" id="UserAndItemsResultMap">
	    <!-- 用户信息 -->
	    <id column="user_id" property="id" />
	    <result column="username" property="username"/>
	    <result column="sex" property="sex"/>
	    <result column="address" property="address"/>
	    <!-- 订单信息一个用户对应多个订单，使用collection映射-->
	    <collection property="ordersList" ofType="cn.mybatis.po.Orders">
		    <id column="id" property="id" />
		    <result column="number" property="number"  />
			<result column="createtime" property="createtime"  />
			<result column="note" property="note"  />
			<result column="user_id" property="userId"  />
	        <!-- 订单明细 一个订单包括 多个明细-->
	        <collection property="orderdetails" ofType="cn.mybatis.po.Orderdetail">
		        <id column="orderdetail_id" property="id" />
			    <result column="orders_id" property="ordersId" />
			    <result column="items_id" property="itemsId" />
			    <result column="items_num" property="itemsNum" />
	            <!-- 商品信息一个订单明细对应一个商品-->
	            <association property="items" javaType="cn.mybatis.po.Items">
			        <id column="itemsId" property="id"/>
			        <result column="items_price" property="price"/>
			        <result column="items_name" property="name"/>
			        <result column="items_detail" property="detail"/>
			        <result column="items_createtime" property="createtime"/>
			        <result column="items_pic" property="pic"/>
		         </association>
	        </collection>
	    </collection>  
    </resultMap>
    
    
    <!-- 查询订单关联查询用户及订单明细，使用resultmap -->
    <select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
	     select orders.* ,user.username , user.sex ,user.address , orderdetail.id as orderdetail_id,orderdetail.orders_id , orderdetail.items_id , orderdetail.items_num
	     from orders , user , orderdetail where orders.user_id = user.id and orderdetail.orders_id = orders.id
    </select>
    
    <!-- 查询用户及购买的商品信息，使用resultmap -->
    <select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
        select orders.* ,user.username , user.sex ,user.address , orderdetail.id as orderdetail_id,orderdetail.orders_id , orderdetail.items_id , orderdetail.items_num,
		items.id as itemsId,items.price as items_price,items.name as items_name ,items.detail as items_detail,items.createtime as items_createtime,items.pic as items_pic 
		from orders , user , items, orderdetail 
		where orders.user_id = user.id and orderdetail.orders_id = orders.id and orderdetail.items_id=items.id
    </select>
    
    
    <!-- 查询订单关联查询用户信息，使用resultmap -->
    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        select * from orders , user where orders.user_id = user.id
    </select>
     <!-- 查询订单关联查询用户信息  使用resultType-->
     <select id="findOrdersUser"  resultType="ordersCustom"> <!--  select * from orders , user where orders.user_id = user.id ; -->
        select orders.* ,user.username , user.sex ,user.address from orders , user where orders.user_id = user.id
    </select>
    
    
    <resultMap type="orders" id="OrdersUserLazyLoading">
	    <!--对订单信息进行映射配置  -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<association property="user" javaType="cn.mybatis.po.User" select="cn.mybatis.mapper.UserMapper.findUserById" column="user_id">
		<!-- 实现对用户信息进行延迟加载 -->
		</association>
    </resultMap>
    <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoading">
        SELECT * FROM orders
    </select>
    
</mapper>


